# Egress
# amended by daman
# free to modify in any... way,shape or form
# when completed,please... share your work

gtk-menu-images = 0
gtk-button-images = 0
#gtk-icon-sizes = "panel-menu=24,24:gtk-button=16,16"

gtk_color_scheme = "fg_color:#000000\nbg_color:#2C2E2C\nbase_color:#464743\ntext_color:#000000\nselected_bg_color:#316320\nselected_fg_color:#AAAAAA\ntooltip_bg_color:#2D382D\ntooltip_fg_color:#AAAAAA"

include "scrollbars/scrollbar.rc"

include "panel.rc"

style "default"
{
	xthickness = 1
	ythickness = 1

	GtkScrolledWindow ::scrollbar-spacing = 0
	GtkScrolledWindow ::scrollbar-within-bevel = 0
	
	GtkButton::child-displacement-x = 1
	GtkButton::child-displacement-y = 1
	GtkButton::default-border = { 0, 0, 0, 0 }

	GtkCheckButton::indicator-size = 14

	GtkPaned::handle-size = 3

	GtkRange::trough-border = 0
	GtkRange::slider-width = 15
	GtkRange::stepper-size = 15
        GtkRange::trough-under-steppers = 1

	GtkVScale::slider_length 			= 10
  	GtkVScale::slider_width 			= 16
  	GtkHScale::slider_length 			= 10
  	GtkHScale::slider_width 			= 16

	GtkScrollbar::min-slider-length = 30
        GtkMenuBar::shadow-type	= 1
	GtkMenuBar::internal-padding = 1
	GtkExpander::expander-size = 3
        GtkToolbar::shadow-type	= 3
	GtkToolbar::internal-padding = 1
        GtkTreeView::odd-row-color= "#6A7168"
	GtkTreeView::even-row-color= "#464743"
	GtkTreeView::expander-size = 3
	GtkTreeView::vertical-separator = 0

	GtkMenu::horizontal-padding = 1
	GtkMenu::vertical-padding = 1

	WnckTasklist::fade-overlay-rect = 0
	# The following line hints to gecko (and possibly other appliations)
	# that the entry should be drawn transparently on the canvas.
	# Without this, gecko will fill in the background of the entry.
	GtkEntry::honors-transparent-bg-hint = 1

        GtkEntry::inner-border			= { 2, 2, 2, 2 }

	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @selected_fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[ACTIVE]        = @fg_color
	fg[INSENSITIVE]   = shade (0.50, @bg_color)

	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (0.95, @bg_color)
	bg[SELECTED]	  = @selected_bg_color
	bg[ACTIVE]        = shade (0.55, @bg_color)
        bg[INSENSITIVE]   = @bg_color

	base[NORMAL]      = @base_color
	base[PRELIGHT]    = @base_color
        base[SELECTED]    = @selected_bg_color
	base[ACTIVE]      = @selected_bg_color
	base[INSENSITIVE] = @base_color

	text[NORMAL]      = @text_color
	text[PRELIGHT]    = @text_color
        text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @selected_fg_color
	text[INSENSITIVE] = shade (0.25, @bg_color)

	engine "murrine" {
		#options
		animation           = FALSE  # FALSE = disabled, TRUE = enabled
		colorize_scrollbar  = FALSE # FALSE = disabled, TRUE = enabled
		contrast            = 1.1 # 0.8 for less contrast, more than 1.0 for more contrast on borders
		glazestyle          = 0     # 0 = flat highlight, 1 = curved highlight, 2 = concave style, 3 = top curved highlight, 4 = beryl highlight
                glow_shade          = 1.25
		glowstyle           = 1     # 0 = top, 1 = bottom, 2 = top and bottom, 3 = horizontal, 4 = centered glow 1.1,0.8,0.9,1.3
		gradient_shades     = {0.55,1.2,1.15,1.45}
		highlight_shade     = 0.95
		lightborder_shade   = 0.9
		lightborderstyle    = 1     # 0 = lightborder on top side, 1 = lightborder on all sides
		listviewheaderstyle = 1     # 0 = flat, 1 = glassy, 2 = raised
		listviewstyle       = 0     # 0 = nothing, 1 = dotted
		menubaritemstyle    = 0     # 0 = menuitem look, 1 = button look
		menubarstyle        = 2     # 0 = flat, 1 = glassy, 2 = gradient, 3 = striped
		menuitemstyle       = 1     # 0 = flat, 1 = glassy, 2 = striped
		menustyle           = 0     # 0 = no vertical menu stripe, 1 = display vertical menu stripe
                progressbarstyle    = 0     # 0 = flat, 1 = striped, 2 = blocks
		reliefstyle	    = 2     # 0 = flat, 1 = inset, 2 = shadow
		rgba		    = FALSE  # FALSE = disabled, TRUE = enabled
		roundness           = 0     # 0 = squared, 1 = old default, more will increase roundness
		#scrollbarstyle      = 0     # 0 = nothing, 1 = circles, 2 = handles, 3 = diagonal stripes, 4 = diagonal stripes and handles, 5 = horizontal stripes, 6 = horizontal stripes and handles
		sliderstyle         = 0     # 0 = nothing added, 1 = handles
		stepperstyle        = 1     # 0 = standard, 1 = integrated stepper handles, 2 = unknown
		toolbarstyle	    = 2     # 0 = flat, 1 = glassy, 2 = gradient                
	}
}

style "wide"
{
	xthickness = 2
	ythickness = 2
}

style "wider"
{
	xthickness = 3
	ythickness = 3
}

style "button"		= "default"
{

  engine "pixmap"
  {
    image
    {
      function			= BOX
      detail				= "buttondefault"
      recolorable		= TRUE
      file				= "Buttons/button-default.png"
      border			= { 8, 8, 5, 9 }
      stretch			= TRUE
    }
    image
    {
      function			= BOX
      state				= PRELIGHT
      recolorable		= TRUE
      file				= "Buttons/button-prelight.png"
      border			= { 8, 8, 5, 9 }
      stretch			= TRUE
    }
    image
    {
      function			= BOX
      state				= ACTIVE
      file				= "Buttons/button-pressed.png"
      border			= { 8, 8, 5, 9 }
      stretch			= TRUE
    }	
    image 
   {
     function			= BOX
     state				= INSENSITIVE
     file					= "Buttons/button-insensitive.png"
     border			= { 8, 8, 5, 9 }
     stretch			= TRUE
    }
    image 
    {
      function			= BOX
      file				= "Buttons/button-normal.png"		
      border			= { 8, 8, 5, 9 }
      stretch			= TRUE
     }	
  }
}


style "entry" = "wider"{

        bg[SELECTED] = mix (0.6, @bg_color, @selected_bg_color)
	fg[SELECTED] = @text_color

	engine "murrine" {
		focus_color = shade (0.85, @selected_bg_color)
		contrast = 1.22
	}
}

style "toolbar" = "default"
{
    xthickness = 2
    ythickness = 2
    
	bg[NORMAL]       = shade (0.40, @bg_color)
	bg[PRELIGHT]     = shade (0.55, @bg_color)
	bg[ACTIVE]       = shade (1.05, @bg_color)
	bg[SELECTED]     = shade (0.75,@bg_color)
	bg[INSENSITIVE]  = shade (0.88,@bg_color)
	
	engine "pixmap"
	{
		image {
	  		function = BOX
			recolorable = TRUE
	  		file = "menu/toolbar.png"
	  		border = {1,1,1,1}
                        stretch = TRUE
	  	}
	  	image {
		      function				= HANDLE
		      overlay_file			= "menu/handlebox.png"
		      overlay_stretch 	= FALSE
		      orientation			= HORIZONTAL
		}
        	image {
		      function				= HANDLE
		      overlay_file			= "menu/handlebox.png"
		      overlay_stretch 	= FALSE
		      orientation			= VERTICAL
		}
		image
		{
		       function        = VLINE
		       recolorable        = TRUE
		       file                = "menu/blank.png"
		}
		image
		{
		      function            = HLINE
		      recolorable        = TRUE
		      file                = "menu/blank.png"
		}
    }
}

style "toolbuttons" = "default"
{
  xthickness            			= 1
  ythickness            			= 1
  GtkWidget::focus_padding = 2

	engine "pixmap" {
      
image
		{
			function        		= BOX
			recolorable     		= TRUE
			state					= NORMAL
			file            			= "menu/toolbutton-normal.png"
			border          		= { 4, 4, 3, 3 }
			stretch         		= TRUE
		}
image
		{
			function        		= BOX
			recolorable     		= TRUE
			state					= PRELIGHT
			file            			= "menu/toolbutton-prelight.png"
			border          		=  { 4, 4, 3, 3 }
			stretch         		= TRUE
		}
image
		{
			function        		= BOX
			recolorable     		= TRUE
			state					= ACTIVE
			file            			= "menu/toolbutton-pressed.png"
			border          		=  { 4, 4, 3, 3 }
			stretch         		= TRUE
		}  
image
		{
			function        		= BOX
			recolorable     		= TRUE
			state					= INSENSITIVE
			file            			= "menu/toolbutton-normal.png"
			border          		=  { 4, 4, 3, 3 }
			stretch         		= TRUE
		}  
	}
}
widget_class "*Tool*GtkToggleButton" style "toolbuttons"
widget_class "*Tool*GtkButton" style "toolbuttons"

style "toolbar-sep" = "toolbar-item"
{
    bg[NORMAL] = shade(0.5, @bg_color)

    engine "murrine"{
	}
	
}
style "notebook" = "default"
{
    xthickness = 2
    ythickness = 2

        fg[NORMAL]       	 = "#7B7B7B"
        fg[ACTIVE]       	 = "#4e4e4e"
 
        engine "pixmap" 
    {
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	state		= ACTIVE
	file		= "Tabs/tab-bottom.png"
	border		= { 4,4,4,4 }
	stretch		= TRUE
	gap_side	= TOP
      }
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	state		= ACTIVE
	file		= "Tabs/tab-top.png"
	border		= { 4, 4, 4, 4 }
	stretch		= TRUE
	gap_side	= BOTTOM
      }

      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	state		= ACTIVE
	file		= "Tabs/tab-left.png"
	border		= { 4, 4, 4, 4 }
	stretch		= TRUE
	gap_side	= RIGHT
      }
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	state		= ACTIVE
	file		= "Tabs/tab-right.png"
	border		= { 4, 4, 4, 4 }
	stretch		= TRUE
	gap_side	= LEFT
      }	
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	file		= "Tabs/tab-top-active.png"
	border		= { 4, 4, 4, 4 }
	stretch		= TRUE
	gap_side	= BOTTOM
      }
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	file		= "Tabs/tab-bottom-active.png"
	border		= { 4, 4, 4, 4 }
	stretch		= TRUE
	gap_side	= TOP
      }
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	file		= "Tabs/tab-left-active.png"
	border		= { 4, 4, 4, 4 }
	stretch		= TRUE
	gap_side	= RIGHT
      }
      image 
      {
        function	= EXTENSION
	recolorable	= TRUE
	file		= "Tabs/tab-right-active.png"
	border		= { 4, 4, 4, 4 }
	stretch		= TRUE
	gap_side	= LEFT
      }

# How to draw boxes with a gap on one side (ie the page of a notebook)

      image 
      {
        function	= BOX_GAP
	recolorable	= TRUE
	file		= "Tabs/notebook.png" 
	border		= { 5, 5, 10, 5 }
	stretch		= TRUE
	gap_file	= "Tabs/gap-top.png"
	gap_border     	= { 5, 5, 5, 5 }
	gap_start_file	= "Others/null.png"
	gap_start_border= { 0, 0, 0, 0 }
	gap_end_file	= "Others/null.png"
	gap_end_border	= { 0, 0, 0, 0 }
	gap_side	= TOP
      }

      image 
      {
        function	= BOX_GAP
	recolorable	= TRUE
	file		= "Tabs/notebook.png"
	border		= { 5, 5, 5, 5 }
	stretch		= TRUE
	gap_file	= "Tabs/gap-bottom.png"
	gap_border	= { 5, 5, 5, 5 }
	gap_start_file	= "Others/null.png"
	gap_start_border= { 0, 0, 0, 0 }
	gap_end_file	= "Others/null.png"
	gap_end_border	= { 0, 0, 0, 0 }
	gap_side	= BOTTOM
      }
      image 
      {
        function	= BOX_GAP
	recolorable	= TRUE
	file		= "Tabs/notebook.png"
	border		= { 5, 5, 5, 5 }
	stretch		= TRUE
	gap_file	= "Tabs/gap-left.png"
	gap_border	= { 5, 5, 5, 5 }
	gap_start_file	= "Others/null.png"
	gap_start_border= { 0, 0, 0, 0 }
	gap_end_file	= "Others/null.png"
	gap_end_border	= { 0, 0, 0, 0 }
	gap_side	= LEFT
      }
      image 
      {
        function	= BOX_GAP
	recolorable	= TRUE
	file		= "Tabs/notebook.png" 
	border		= { 5, 5, 5, 5 }
	stretch		= TRUE
	gap_file	= "Tabs/gap-right.png"
	gap_border	= { 5, 5, 5, 5 }
	gap_start_file	= "Others/null.png"
	gap_start_border= { 0, 0, 0, 0 }
	gap_end_file	= "Others/null.png"
	gap_end_border	= { 0, 0, 0, 0 }
	gap_side	= RIGHT
      }

# How to draw the box of a notebook when it isnt attached to a tab

      image 
      {
        function	= BOX
	recolorable	= TRUE
	file		= "Tabs/notebook.png"
	border		= { 5, 5, 5, 5 }
	stretch		= TRUE

      }
  }
}
style "panel" {
	engine "murrine" {
	}
}

style "menu" = "default"
{

  xthickness	= 0
  ythickness	= 2

   fg[PRELIGHT] = @selected_fg_color
   text[PRELIGHT] = @selected_fg_color

   engine "pixmap"
   {
     image
     {
       function		= BOX
       recolorable    	= TRUE
       detail		= "menu"
       file		= "menu/menu.png"
       border		= { 1, 1, 1, 1 }
       stretch		=  TRUE
     }
   }
}

style "menu-item"	= "default"
{
  
  ythickness	= 2
  
  fg[PRELIGHT] 		= @selected_fg_color
  text[PRELIGHT]	= @selected_fg_color
   
   engine "pixmap"
  {
    image
    {
      function		= BOX
      recolorable	= TRUE
      file		= "menu/menuitem.png"
      border		= { 3, 3, 3, 3 }
      stretch		= TRUE
    }
    image
    {
      function		= ARROW
      recolorable	= TRUE
      state		= NORMAL
      overlay_file	= "menu/arrow-menu-normal.png"
      overlay_stretch	= FALSE
      arrow_direction	= RIGHT
    }
    image
    {
      function		= ARROW
      recolorable	= TRUE
      state		= PRELIGHT
      overlay_file	= "menu/arrow-menu-prelight.png"
      overlay_stretch	= FALSE
      arrow_direction	= RIGHT
    }
    image
    {
       function		= VLINE
       recolorable		= TRUE
       file			= "Lines/line-v.png"
       border			= { 1, 1, 0, 0 }
       stretch			= TRUE
    }
    image
    {
      function			= HLINE
      recolorable		= TRUE
      file			= "Lines/line-h.png"
      border			= { 0, 0, 1, 1 }
      stretch			= TRUE
    }
  }
}


style "separator-menu-item"
{
   engine "pixmap"
  {
    image
    {
       function		= VLINE
       recolorable		= TRUE
       file			= "Lines/line-v.png"
       border			= { 1, 1, 0, 0 }
       stretch			= TRUE
    }
    image
    {
      function			= HLINE
      recolorable		= TRUE
      file			= "Lines/line-h.png"
      border			= { 0, 0, 1, 1 }
      stretch			= TRUE
    }
  }
}

# Based on the default style so that the colors from the button
# style are overriden again.
style "treeview-header" = "default"
{
	xthickness = 2
	ythickness = 1

	bg[NORMAL] = shade(1.25, @bg_color)
	bg[PRELIGHT] = shade(0.95, @bg_color)
	bg[ACTIVE] = shade(0.8, @bg_color)
    
	engine "murrine"{
	    glazestyle = 3
	    glowstyle = 0
	    contrast = 1.0
	    highlight_shade = 1.0
	    lightborder_shade   = 1.0
	    gradient_shades = {1.45, 1.75, 0.96, 0.93}
	}
}
style "treeview-item" = "default"
{

#text [ACTIVE] = "#d9d9d9"
#text [SELECTED] = "#ffffff"


engine "pixmap"
{

		image
		{
		function	= BOX
		state		= ACTIVE
		file		= "/listheaders/treeitem.png"
		border		= {2,2,1,2}
		stretch		= TRUE
		}

		image
		{
		function	= BOX
		state		= SELECTED
		file		= "/listheaders/treeitem.png"
		border		= {2,2,5,2}
		stretch		= TRUE
		}

		image
		{
		function	= FLAT_BOX
		state		= SELECTED
		file		= "/listheaders/treeitem.png"
		border		= {2,2,1,2}
		stretch		= TRUE
		}




 }
}


style "tooltips"
{
	xthickness = 4
	ythickness = 1

	bg[NORMAL] = "#353D32"
	fg[NORMAL] = @tooltip_fg_color

	engine "murrine"{
	    gradient_shades = {0.55,1.8,1.85,1.95}
	}
}

style "progressbar" 
{
  fg[PRELIGHT]       		= "#7b7b7b"
  
  xthickness            		= 1
  ythickness            		= 0

  engine "pixmap" 
  {
    image
    {
      function				= BOX
      detail				= "trough"
#     recolorable			= TRUE
      file				= "ProgressBar/trough-progressbar-horiz.png"
      border				= { 2, 2, 2, 2 }
      stretch				= TRUE
      orientation                       = HORIZONTAL
}
    image
    {
      function				= BOX
      detail				= "trough"
#     recolorable			= TRUE 
      file				= "ProgressBar/trough-progressbar-vert.png"
      border				= { 2, 2, 2, 2 }
      stretch				= TRUE
      orientation                       = VERTICAL
 }
    image
    {
      function				= BOX
      detail				= "bar"
      file				= "ProgressBar/progressbar-horiz.png"
      border				= { 2, 2, 2, 2}
      stretch				= TRUE
      orientation			= HORIZONTAL
    } 
    image
    {
      function				= BOX
      detail				= "bar"
      file				= "ProgressBar/progressbar-vert.png"
      border				= { 2, 2, 2, 2}
      stretch				= TRUE
      orientation			= VERTICAL
    }
  }
}


style "pixmap-statusbar" = "default"
{
	ythickness = 3
	xthickness = 3

    engine "pixmap"
    {
        image
        {
            function = RESIZE_GRIP
            recolorable = TRUE
            detail = "statusbar"
            overlay_file = "menu/statusgrip.png"
            overlay_border = {0,0,0,0}
            overlay_stretch = TRUE
        }
        image
	{
	   function			= SHADOW
	   shadow			= IN
	   file				= "menu/blank.png"
	}
	image
	{
	   function			= SHADOW
	   shadow			= OUT
	   file				= "menu/blank.png"
	}
	image
	{
	   function		= SHADOW
	   shadow			= ETCHED_IN
	   file				= "menu/blank.png"	
	}
	image
	{
	   function		= SHADOW
	   shadow			= ETCHED_OUT
	   file				= "menu/blank.png"
	}
    }
}

style "comboboxentry" 
{
}

style "spinbutton"
{
	bg[NORMAL]   = shade (0.60, @bg_color)
	bg[PRELIGHT] = shade (0.65, @bg_color) 
	bg[ACTIVE]   = shade (0.63, @bg_color)
	bg[INSENSITIVE] = darker (@bg_color)

	engine "murrine"{
		glazestyle = 4
		gradient_shades = {1.25, .97, .93, .95}
		contrast = 1.0
	}
}

style "range" = "default"
{	
  engine "pixmap" 
  {
    image 
    {
      function			= BOX
      recolorable		= TRUE
      detail			= "trough"
      file			= "Range/trough-horizontal.png"
      border			= { 4, 4, 7, 7 }
      stretch			= TRUE
      orientation		= HORIZONTAL
    }	
    image 
    {
      function			= BOX
      recolorable		= TRUE
      detail			= "trough"
      file			= "Range/trough-vertical.png"
      border			= { 7, 7, 4, 4 }
      stretch			= TRUE
      orientation		= VERTICAL
    }

############### the sliders ###############

    image 
    {
      function				= SLIDER
      recolorable			= TRUE
      state           			= NORMAL
      file				= "Others/null.png"
      border				= { 0, 0, 0, 0 }
      stretch				= TRUE
      overlay_file			= "Range/slider-horiz.png"
      overlay_stretch			= FALSE
      orientation			= HORIZONTAL
    }
    image 
    {
      function				= SLIDER
      recolorable			= TRUE
     state           			= PRELIGHT
      file				= "Others/null.png"
      border				= { 0, 0, 0, 0 }
      stretch				= TRUE
      overlay_file			= "Range/slider-horiz-prelight.png"
      overlay_stretch			= FALSE
      orientation			= HORIZONTAL
    }
    image 
    {
      function				= SLIDER
      recolorable			= TRUE
      state           			= INSENSITIVE
      file				= "Others/null.png"
      border				= { 0, 0, 0, 0 }
      stretch				= TRUE
      overlay_file			= "Range/slider-horiz.png"
      overlay_stretch			= FALSE
      orientation			= HORIZONTAL
    }

######################### VERTICAL ###########################

    image 
    {
      function				= SLIDER
      recolorable			= TRUE
      state           			= NORMAL
      file				= "Others/null.png"
      border				= { 0, 0, 0, 0 }
      stretch				= TRUE
      overlay_file			= "Range/slider-vert.png"
      overlay_stretch			= FALSE
      orientation			= VERTICAL
    }
    image 
    {
      function				= SLIDER
      recolorable			= TRUE
     state           			= PRELIGHT
      file				= "Others/null.png"
      border				= { 0, 0, 0, 0 }
      stretch				= TRUE
      overlay_file			= "Range/slider-vert-prelight.png"
      overlay_stretch			= FALSE
      orientation			= VERTICAL
    }
    image 
    {
      function				= SLIDER
      recolorable			= TRUE
      state           			= INSENSITIVE
      file				= "Others/null.png"
      border				= { 0, 0, 0, 0 }
      stretch				= TRUE
      overlay_file			= "Range/slider-vert.png"
      overlay_stretch			= FALSE
      orientation			= VERTICAL
    }
  }
}


style "menubar" = "default"
{
	# Static dark color so continuity doesn't break with toolbars
	# when color changes
	#bg[NORMAL] = "#343330"
	engine "pixmap"
	{
		image {
	  		function = BOX
	  		file = "menu/menubar.png"
	  		border = {1,1,1,1}
	  		stretch = TRUE
	  	}
	  	image {
		      function				= HANDLE
		      overlay_file			= "menu/handlebox.png"
		      overlay_stretch 	= FALSE
		      orientation			= HORIZONTAL
		}
        image {
		      function				= HANDLE
		      overlay_file			= "menu/handlebox.png"
		      overlay_stretch 	= FALSE
		      orientation			= VERTICAL
		}
    }
}

style "frame"
{
	#Uncomment for dark statusbars. Breaks some apps. (FIXME: Doesn't work)
	#bg[ACTIVE] = shade(0.2,@bg_color)
	#fg[NORMAL] = mix (1.5, @fg_color, '#ffffff')
	#fg[PRELIGHT] = mix (1.4, @fg_color, '#ffffff')
}

style "frame-title" = "frame"
{
	fg[NORMAL] = lighter (@fg_color)
}

style "nautilus-location"
{
	bg[NORMAL] = mix(0.60, @bg_color, @selected_bg_color)
}

# SZ07: This is added to tell the theme how to color checkmarks and radio items that are not in menus.
style "radiocheck"
{
	text[NORMAL]	= @selected_fg_color	# Color for selected checks/radio items.
	text[PRELIGHT]	= @selected_fg_color	# Color for selected checks/radio items on prelight.
	engine "murrine"{
	    roundness = 2
	    contrast = 1.03
	    highlight_shade = 1.0
	    lightborder_shade   = 1.0
	    gradient_shades = {1.1,1.0,1.0,0.9}
	    reliefstyle	    = 2 
	}
}
#########################################
# Matches
#########################################

# default style is applied to every widget
class "GtkWidget"    style "default"

# Increase the x/ythickness in some widgets
class "GtkRange"     style "range"
class "GtkFrame"     style "frame"
class "GtkSeparator" style "wide"
class "GtkEntry"     style "entry"
class "GtkStatusbar" style "pixmap-statusbar"
class "GtkMenuBar"   style:highest "menubar"

class "*HandleBox" style "toolbar"
class "GtkToolbar"   style "toolbar" 
widget_class "*HandleBox" style "toolbar"
widget_class "*<GtkToolbar>.*"   style "toolbuttons"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
style "text-is-fg-color-workaround"
{
	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}
widget_class "*.<GtkComboBox>.<GtkCellView>"   style "text-is-fg-color-workaround"

style "text-is-fg-color-workaround-dark"
{
	#Make it work with this theme!
	text[NORMAL] = @fg_color
	text[PRELIGHT] = @selected_fg_color
}

class "GtkSpinButton"  style "spinbutton"
class "GtkButton"      style "button"

class "GtkRadioButton"	style:highest "radiocheck"	# SZ07: Added for the checkmarks/radio
class "GtkCheckButton"	style:highest "radiocheck"	# SZ07: Added for the checkmarks/radio

# General matching following, the order is choosen so that the right styles override each other
# eg. progressbar needs to be more important then the menu match.

widget_class "*<GtkNotebook>*<GtkEventBox>"     style "notebook"
widget_class "*<GtkNotebook>*<GtkDrawingArea>"  style "notebook"
widget_class "*<GtkNotebook>*<GtkLayout>"       style "notebook"
widget_class "*<GtkNotebook>"    style "notebook"

widget_class "*<GtkComboBoxEntry>*" style "comboboxentry"
widget_class "*<GtkCombo>*"         style "comboboxentry"

widget_class "*<GtkMenuBar>.*"		style "menu-item"
widget_class "*<GtkMenu>*"              style "menu"
widget_class "*<GtkMenuItem>*"          style "menu-item"
widget_class "*<GtkSeparatorMenuItem>*" style "separator-menu-item"

widget_class "*<GtkFrame>"  style "frame"
widget_class "*.<GtkFrame>.<GtkLabel>" style "frame-title"

widget_class "*<GtkStatusbar>*"  style "wider"
widget_class "*<GtkProgressBar>"       style "progressbar"

# Treeview header
widget_class "*.<GtkTreeView>.<GtkButton>" style "treeview-header"
widget_class "*.<GtkTreeView>"		   style "treeview-item"
widget_class "*.<GtkCTree>.<GtkButton>"    style "treeview-header"
widget_class "*.<GtkList>.<GtkButton>"     style "treeview-header"
widget_class "*.<GtkCList>.<GtkButton>"    style "treeview-header"

# Panel stuff
widget "*PanelWidget*" 					style "panel"
widget "*PanelApplet*" 					style "panel"
widget "*fast-user-switch*"				style "panel" # Workaround for Fast User Switch applet
class "PanelApp*" 					style "panel"
class "PanelToplevel*" 					style "panel"
widget_class "*Panel*<GtkMenuBar>*"           		style:highest "panel" # The panel menubar
widget "*TomboyTray*"					style "panel" # Workaround for Tomboy
widget "*TomboyApplet*"					style "panel"

#XFCE panel
widget_class "*notif*"		style "panel"
widget_class "*Notif*"		style "panel"
widget_class "*Tray*"		style "panel"
widget_class "*tray*"		style "panel"
widget "*Xfce*Panel*"		style "panel"
class "*Xfce*Panel*"		style "panel"

# The following lines make panel-menu-applet, slab-main-menu and gimmie applet's text bold. The radius value sets the roundness value of the selected menu-item.
style "bold-panel-menu"
{
	font_name = "Bold"

	engine "murrine" {
	roundness = 2
	}
}

style "bold-panel-slab"
{
	font_name = "Bold"
}
widget "*Panel*slab-main-menu-panel-button*" style "bold-panel-slab"
widget "*gimmie*" style "bold-panel-slab"
widget "*Panel*MenuBar*" style "bold-panel-menu"
widget "*Panel*Clock*" style "bold-panel-menu"

widget "gtk-tooltip*" style "tooltips"

###################################################
# Special cases and work arounds
###################################################

# Nautilus sidebar
widget_class "*NautilusSidePane.GtkFrame"	style "pixmap-statusbar"

# Workarounds for Evolution
widget_class "*.ETable.ECanvas"    style "treeview-header"
widget_class "*.ETree.ECanvas"    style "treeview-header"

# Firefox isn't nice to dark themes, so unset the dark stuff.
#widget "MozillaGtkWidget*Toolbar*"	style "toolbuttons"
#widget "MozillaGtkWidget*Frame*"	style "default"

# Monodevelop uses an OptionPanel widget, which incidentally is dark in our theme.
# Undo it:
widget "*OptionPanel*"		style "button"
widget "*optionPanel*"		style "button"

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" style : highest "nautilus-location"

style "menuitem-text-is-fg-color-workaround" 
{
	text[NORMAL]        = @fg_color
	text[PRELIGHT]      = @selected_fg_color
	text[SELECTED]      = @selected_fg_color
	text[ACTIVE]        = @fg_color
	text[INSENSITIVE]   = darker (@bg_color)
}
widget "*.gtk-combobox-popup-menu.*"   style "menuitem-text-is-fg-color-workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the
# base color set.
style "fg-is-text-color-workaround"
{
	fg[NORMAL]      = @text_color
	fg[PRELIGHT]    = @text_color
	fg[ACTIVE]      = @selected_fg_color
	fg[SELECTED]    = @selected_fg_color
	fg[INSENSITIVE] = darker (@bg_color)
}
widget_class "*<GtkListItem>*" style "fg-is-text-color-workaround"
# The same problem also exists for GtkCList and GtkCTree
# Only match GtkCList and not the parent widgets, because that would also change the headers.
widget_class "*<GtkCList>" style "fg-is-text-color-workaround"

style "evo-new-button-workaround" 
{
	engine "clearlooks"
	{
		toolbarstyle = 0
	}
}

widget_class "EShellWindow.GtkVBox.BonoboDock.BonoboDockBand.BonoboDockItem*" style "evo-new-button-workaround"

#Rhythmbox toolbar near the search entry. Use default + wide so that it doesn't turn dark.
style "rhythmbox-header" = "default"
{
	xthickness = 3
	ythickness = 3
	engine "clearlooks" {
	}
}
widget "*RBSourceHeader*"	style:highest "rhythmbox-header"
widget "*HeaderToolbar*"	style:highest "rhythmbox-header"
widget "*FooterToolbar*"	style:highest "rhythmbox-header"

widget "*swt*toolbar*"	style "default"

style "dialog" = "dark"
{
    bg[NORMAL] = mix(0.4, @selected_bg_color, shade(0.7, @bg_color))
    fg[NORMAL] = shade(0.5, @fg_color)
    text[NORMAL] = shade(0.5, @text_color)
}
style "dialog-button" = "dark"
{
    bg[NORMAL] = shade(0.15, @bg_color)
    bg[PRELIGHT] = shade(0.18, @bg_color)
}

# Dialog boxes...?
# widget_class "*Dialog*" style "dialog"
# widget_class "*Dialog*.*" style "dialog"
# widget_class "*Dialog*.*Button*" style "dialog-button"

